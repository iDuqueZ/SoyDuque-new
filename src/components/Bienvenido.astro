<div class="w-full md:w-auto">
  <p data-typewriter="Desarrollador...,DeseÃ±ador UX/UI...,Analista de Datos...,Estudiante...,Amante de la IA...,Curioso..."></p>
</div>

<style>

  [data-typewriter] {
    font-weight: bold;
    border-right: 0.8rem solid transparent;
    padding: 0.6rem;
    display: inline-block;
  }

  [data-typewriter]:not(.typing) {
    animation: blink-caret 1.1s step-end infinite;
  }

  @keyframes blink-caret {
    0%,
    100% {
      border-color: transparent;
    }

    50% {
      border-color: #ff8e3c;
    }
  }
</style>

<script>
  class Typerwriter {
    constructor(el, options) {
      this.el = el;
      this.words = [...this.el.dataset.typewriter.split(",")];
      this.speed = options?.speed || 100;
      this.delay = options?.delay || 1500;
      this.repeat = options?.repeat;
      this.initTyping();
    }

    wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));

    toggleTyping = () => this.el.classList.toggle("typing");

    async typewrite(word) {
      await this.wait(this.delay);
      this.toggleTyping();
      for (const letter of word.split("")) {
        this.el.textContent += letter;
        await this.wait(this.speed);
      }
      this.toggleTyping();
      await this.wait(this.delay);
      this.toggleTyping();
      while (this.el.textContent.length !== 0) {
        this.el.textContent = this.el.textContent.slice(0, -1);
        await this.wait(this.speed);
      }
      this.toggleTyping();
    }

    async initTyping() {
      for (const word of this.words) {
        await this.typewrite(word);
      }
      if (this.repeat) {
        await this.initTyping();
      } else {
        this.el.style.animation = "none";
      }
    }
  }

  document.querySelectorAll("[data-typewriter]").forEach((el) => {
    new Typerwriter(el, {
      repeat: true,
    });
  });
</script>
